@model  ClothesShop.Models.EmployeeViewModel
@using ClothesShop.Languages
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = ClothesShop.Languages.Resources.EmployeeDetails;
}
@section styles{
    <style>
        @@media(max-width:768px) {
            .col-sm-12.col-md-5 {
                display: block !important;
            }
        }
    </style>
}
<div class="container-fluid dir-rtl col-md-8 offset-md-2">
    <div class="card m-0">
        <div class="card-header pb-0">
            <h3 class="m-0">@Resources.EmployeeDetails</h3>
        </div>
        <div class="card-body custom-card-body pt-2 m-0">
            <div class="card">
                <div class="card-header pb-0">
                    <h4 class="m-0">@Resources.EmployeeDetails</h4>
                </div>
                <div class="card-body pb-0 pt-0">
                    <hr />
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "" })
                            :   @Html.DisplayFor(model => model.FullName, new { htmlAttributes = new { @class = "" } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.BirthDate, new { htmlAttributes = new { @class = "", @value = Model.BirthDate } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.GenderID, htmlAttributes: new { @class = "" })
                            @{
                                var genders = ClothesShop.Helpers.Helper.EnumToList<ClothesShop.Enums.Gender>();
                                var gender = genders.Where(g => g.ID == Model.GenderID).FirstOrDefault();
                                var genderName = gender != null ? gender.Name : "";
                            }
                            : @Html.Label(genderName, new { @class = " col-sm-6 " })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.SSN, new { htmlAttributes = new { @class = "" } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.MobileNumber1, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.MobileNumber1, new { htmlAttributes = new { @class = "" } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.MobileNumber2, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.MobileNumber2, new { htmlAttributes = new { @class = "" } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">

                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.Address, new { @class = " col-sm-12 " })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @{
                                var cities = ClothesShop.Helpers.Helper.GetCities();
                                var city = cities.Where(c => c.ID == Model.CityID).FirstOrDefault();
                                var cityName = cities != null ? city.Name : "";
                            }
                            @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "" })
                            : @Html.Label(cityName, new { @class = " col-sm-6 " })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.BackSSN, htmlAttributes: new { @class = "" })
                            <img src="@ViewBag.BackSSN" style="width:250px" id="backSSNImage" onerror="this.error = null; this.src='/Images/id-card.png'" />
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.FrontSSN, htmlAttributes: new { @class = "" })
                            <img src="@ViewBag.FrontSSN" style="width:250px" id="frontSSNImage" onerror="this.error = null; this.src='/Images/id-card.png'" />
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="card">
                <div class="card-header pb-0">
                    <h4 class="m-0">@Resources.WorkInformation</h4>
                </div>
                <div class="card-body pb-0 pt-0">
                    <hr />
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.JobTypeID, htmlAttributes: new { @class = "" })
                            @{
                                var jobTypes = ClothesShop.Helpers.Helper.EnumToList<ClothesShop.Enums.JobTypes>();
                                var jobType = jobTypes.Where(j => j.ID == Model.JobTypeID).FirstOrDefault();
                                var jobName = jobType != null ? jobType.Name : "";
                            }
                            : @Html.Label(jobName, new { @class = " col-sm-6 " })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.StartWorkingDate, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.StartWorkingDate, new { htmlAttributes = new { @class = " col-sm-12 " } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.JobName, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.JobName, new { htmlAttributes = new { @class = " col-sm-12 " } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.Salary, new { htmlAttributes = new { @class = " col-sm-12 " } })
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "" })
                            : @Html.DisplayFor(model => model.AdditionalInfo, new { @class = " col-sm-12 " })
                        </div>
                    </div>
                    @if (Model.JobTypeID == (int)ClothesShop.Enums.JobTypes.DeliveryMan)
                    {
                        <div class="col-sm-12 p-0">
                            <div class="col-xs-6 p-0">
                                <div class="col-sm-12 p-0 ">
                                    <div class="col-sm-12 margin5 ">
                                        @Html.LabelFor(model => model.BackLicence, htmlAttributes: new { @class = "" })
                                    </div>
                                    <div class="col-md-12 margin5">
                                        <img src="@ViewBag.BackLicence" style="width:250px" id="backLicenceImage" onerror="this.error = null; this.src='/Images/id-card.png'" />
                                    </div>
                                </div>
                            </div>

                            <div class="col-xs-6 p-0">
                                <div class="col-sm-12 p-0 ">
                                    <div class="col-sm-12">
                                        @Html.LabelFor(model => model.FrontLicence, htmlAttributes: new { @class = "" })
                                    </div>
                                    <div class="col-md-12">
                                        <img src="@ViewBag.FrontLicence" style="width:250px" id="frontLicenceImage" onerror="this.error = null; this.src='/Images/id-card.png'" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="card-footer">
            @if (ClothesShop.Helpers.RolesHelper.CheckRoleRight("Employees", ClothesShop.Enums.RoleType.Edit))
            {
                <a type="button" class="btn btn-lg btn-success" href="@Url.Action("Edit", "Employees")/@Model.ID">
                    @Resources.Update
                </a>
            }
            <a type="button" class="btn btn-md btn-primary pull-left" href="@Url.Action("Index", "Employees")">
                @Resources.BackToList
            </a>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/employeesInfo")
    <script>
        $(document).ready(function () {
            @{
                var birthdate = Model.BirthDate.HasValue ? Model.BirthDate.Value.ToString(ClothesShop.Helpers.DateTimeFormatter.ViewingDateFormat) : "";
             }
            $("#BirthDate").val("@birthdate");

            @{
                var startWorkingDate = Model.StartWorkingDate.HasValue ? Model.StartWorkingDate.Value.ToString(ClothesShop.Helpers.DateTimeFormatter.ViewingDateFormat) : "";
            }
            $("#StartWorkingDate").val("@startWorkingDate");
        });
    </script>
}