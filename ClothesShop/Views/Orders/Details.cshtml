@model ClothesShop.Models.OrdersViewModel
@using ClothesShop.Languages
@{
    ViewBag.Title = ClothesShop.Languages.Resources.Details;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <style>
        @@media(max-width:768px){
            .col-sm-12.col-md-5{
                display: block !important;
            }
        }
    </style>
}
<div class="container-fluid dir-rtl col-md-8 offset-md-2">
    <div class="card m-0">
        <div class="card-header pb-0">
            <h3 class="m-0">@Resources.Details</h3>
        </div>
        <div class="card-body custom-card-body pt-2 m-0">
            <div class="card">
                <div class="card-header pb-0">
                    <h4 class="m-0">@Resources.CustomerInformation</h4>
                </div>
                <div class="card-body pb-0 pt-0">
                    <hr />
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.Customer.Name, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.Customer.Name)
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.Customer.Address, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.Customer.Address) - @Html.DisplayFor(model => model.CityName)
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.Customer.MobileNumber1, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.Customer.MobileNumber1)
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.Customer.MobileNumber2, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.Customer.MobileNumber2)
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="card">
                <div class="card-header pb-0">
                    <h4 class="m-0">@Resources.OrderDetails</h4>
                </div>
                <div class="card-body pb-0 pt-0">
                    <hr />
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "form-label" })
                            : <label class="dir-ltr">@Html.DisplayFor(model => model.RequestDate_)</label>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "form-label" })
                            : <label class="dir-ltr">@Html.DisplayFor(model => model.DeliveryDate)</label>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.OrderTotalPrice, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.OrderTotalPrice) @Resources.LE
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.ShipmentPrice, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.ShipmentPrice) @Resources.LE
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.PaidAmount, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.PaidAmount) @Resources.LE
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12">
                            @Html.LabelFor(model => model.OrderStatusID, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.OrderStatusName)
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.SellerID, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.SellerName)
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.EmployeeName)
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.ShipmentCompanyID, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.ShipmentCompanyName)
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-5 mb-2 d-inline-block">
                        <div class="col-sm-12 ">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "form-label" })
                            : @Html.DisplayFor(model => model.Notes)
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="card">
                <div class="card-header pb-0">
                    <h4 class="m-0">@Resources.Products</h4>
                </div>
                <div class="card-body pb-0 pt-0">
                    <hr />
                    <div id="ProductsGrid"></div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            @if (
                ((ClothesShop.Helpers.RolesHelper.CheckRoleRight("Orders1", ClothesShop.Enums.RoleType.Edit) && Model.PageID == "137D0514-F286-48AA-BCD4-B7FE7C5B79D8")
                || (ClothesShop.Helpers.RolesHelper.CheckRoleRight("Orders2", ClothesShop.Enums.RoleType.Edit) && Model.PageID == "80DB4628-F4D2-45EA-B82F-B0E2B7E9FD09"))
                && Model.OrderStatusID != (int)ClothesShop.Enums.OrderStatuses.TotallyDelivered
                )
            {
                <a type="button" class="btn btn-lg btn-success" href="@Url.Action("Edit", "Orders")/@Model.ID">
                    <i class="dx dx-icon-edit"></i> @Resources.Update
                </a>
            }
            <a type="button" class="btn btn-md btn-primary pull-left" href="@Url.Action("Index", "Orders",new { PageID = Model.PageID })">
                @Resources.BackToList
            </a>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/orderInfo")
    <script>
    $(document).ready(function () {
        OrderInfoManager.Instance.Init({
            "no_data": "@Html.Raw(Resources.NoData)",
            "products": {
                "info_url": "@Url.Action("GetProductInfo", "Products")",
                "grid_id": "#ProductsGrid",
                "must_product_msg": "@Html.Raw(ClothesShop.Languages.Resources.MustHaveProducts)",
                "total": "@Html.Raw(ClothesShop.Languages.Resources.Total)" + " : ",
                "product_seralized": '@Html.Raw(Model.ProductSeralized)',
                "grid_captions": {
                    "product": "@Html.Raw(Resources.Product)",
                    "color": "@Html.Raw(Resources.Color)",
                    "size": "@Html.Raw(Resources.Size)",
                    "quantity": "@Html.Raw(Resources.NumberOfPieces)",
                    "price": "@Html.Raw(Resources.PiecePrice)",
                    "total": "@Html.Raw(Resources.Total)",
                    "currency": "@Html.Raw(Resources.LE)",
                    "delete": "@Html.Raw(Resources.Delete)",
                },                
                "is_details_view": true
            }
        });
    });
    </script>
}
