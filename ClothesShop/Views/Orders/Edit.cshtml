@model  ClothesShop.Models.OrdersViewModel
@using ClothesShop.Languages
@using ClothesShop.Helpers
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = Resources.EditOrder;
}
<div class="container-fluid dir-rtl col-md-8 offset-md-2">
    @using (Html.BeginForm("Edit", "Orders", FormMethod.Post, new { @id = "OrdersForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.CreatedBy)
        @Html.HiddenFor(m => m.CreatedOn)
        @Html.HiddenFor(m => m.RequestDate)
        @Html.HiddenFor(m => m.CustomerID)
        @Html.HiddenFor(model => model.Customer.ID)
        @Html.HiddenFor(model => model.ProductSeralized)
        @Html.ValidationSummary(true, "", new { @class = "form-label text-danger" })

        var currency = Resources.LE;

        <div class="card m-0">
            <div class="card-header pb-0">
                <h3 class="m-0">@Resources.EditOrder</h3>
            </div>
            <div class="card-body custom-card-body pt-2 m-0">
                @Html.Partial("_CustomerInfo", Model)
                <hr />
                @Html.Partial("_OrderDetails", Model)
                <hr />
                @Html.Partial("_ProductInfo")
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-md btn-success" id="submit">
                    @Resources.Save
                </button>
                <a type="button" class="btn btn-md btn-primary pull-left" href="@Url.Action("Index", "Orders")">
                    @Resources.BackToList
                </a>
            </div>
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/orderInfo")
<script>
    $(document).ready(function () {
        @{
            var deliveryDate = Model.DeliveryDate.HasValue ? Model.DeliveryDate.Value.ToString(DateTimeFormatter.MonthDayDateFormat) : "";
        }
        $("#DeliveryDate").val("@deliveryDate");
        OrderInfoManager.Instance.Init({
                        "city": {
                "lst": CommonManager.Instance.NeowtonsoftDesealize('@Newtonsoft.Json.JsonConvert.SerializeObject(Helper.GetCities())'),
                "id": "#CityID",
                "div_id": "#City"
            },
            "order_status": {
                "lst": CommonManager.Instance.NeowtonsoftDesealize('@Newtonsoft.Json.JsonConvert.SerializeObject(Helper.EnumToList<ClothesShop.Enums.OrderStatuses>())'),
                "id": "#OrderStatusID",
                "div_id": "#OrderStatus"
            },
            "employee": {
                "lst": CommonManager.Instance.NeowtonsoftDesealize('@Newtonsoft.Json.JsonConvert.SerializeObject(Helper.GetDeliveryMen())'),
                "id": "#EmployeeID",
                "div_id": "#Employee"
            },
            "seller": {
                "lst": CommonManager.Instance.NeowtonsoftDesealize('@Newtonsoft.Json.JsonConvert.SerializeObject(Helper.GetEmployees())'),
                "id": "#SellerID",
                "div_id": "#Seller"
            },
            "shipment_company": {
                "lst": CommonManager.Instance.NeowtonsoftDesealize('@Newtonsoft.Json.JsonConvert.SerializeObject(Helper.GetShipmentCompanies())'),
                "id": "#ShipmentCompanyID",
                "div_id": "#ShipmentCompany"
            },
            "delivery_Date": {
                "div_id": "#Delivery_Date",
                "id": "#DeliveryDate",
                "message":"@Html.Raw(Resources.Date)"
            },
            "select": "@Html.Raw(Resources.Search)",
            "no_data": "@Html.Raw(Resources.NoData)",
            "products": {
                "info_url": "@Url.Action("GetProductInfo", "Products")",
                "grid_id": "#ProductsGrid",
                "color_id": "#Color",
                "size_id": "#Size",
                "product_id": "#Product",
                "num_pieces_id": "#NumberOfPieces",
                "selling_price_id": "#SellingPrice",
                "must_product_msg": "@Html.Raw(ClothesShop.Languages.Resources.MustHaveProducts)",
                "total": "@Html.Raw(ClothesShop.Languages.Resources.Total)" + " : ",
                "product_seralized_id": "#ProductSeralized",
                "add_id": "#AddProduct",
                "lst": CommonManager.Instance.NeowtonsoftDesealize('@Newtonsoft.Json.JsonConvert.SerializeObject(Helper.GetProducts())'),
                "captions": {
                    "product": "@Html.Raw(Resources.Product)",
                    "color": "@Html.Raw(Resources.Color)",
                    "size": "@Html.Raw(Resources.Size)",
                    "quantity": "@Html.Raw(Resources.NumberOfPieces)",
                    "price": "@Html.Raw(Resources.PiecePrice)",
                    "total": "@Html.Raw(Resources.Total)",
                    "currency": "@Html.Raw(Resources.LE)",
                    "delete": "@Html.Raw(Resources.Delete)",
                },
                "form_id": "#OrdersForm",
                "is_details_view": false
            }
        });
    });
</script>
}   