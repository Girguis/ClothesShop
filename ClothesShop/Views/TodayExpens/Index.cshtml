@model ClothesShop.Models.TodayExpenseViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = ClothesShop.Languages.Resources.TodayExpenses;
}
<div class="container tableContainer">
    @if (ClothesShop.Helpers.RolesHelper.CheckRoleRight("TodayExpens", ClothesShop.Enums.RoleType.Add))
    {
        <p class="f-left">
            <a href="@Url.Action("Create", "TodayExpens", new { area = "" })" class="btn btn-lg btn-outline-success">
                <i class="fa fa-plus"></i> @ClothesShop.Languages.Resources.AddExpenses
            </a>
        </p>
    }
    <table id="TodayExpensesGrid" class="table table-striped table-hover table-bordered table-responsive GeneralTable" width="100%" cellspacing="0">
        <thead>
            <tr class="theadData">
                <th class="width30" data-headerid="CreatedOn" data-dir="desc" onclick="TableManager.prototype.Sort(this);">
                    <i class="fa fa-arrow-down searchArrow"></i>  @ClothesShop.Languages.Resources.Date
                </th>
                <th class="width30" data-headerid="TodayTotalExpensesCost" data-dir="" onclick="TableManager.prototype.Sort(this);">
                    @ClothesShop.Languages.Resources.TotalCost
                </th>
                <th class="width20"></th>
                <th class="width20"></th>
            </tr>
            <tr class="searchRow">
                <th class="padding0 width30">
                    @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @id = "CreatedOn", @type = "date", @class = "form-control setMaxWidth", placeholder = @ClothesShop.Languages.Resources.Search } })
                </th>
                <th class="padding0 width30">
                    <div class="searchInput">
                        <i class="fa fa-search"></i>
                        @Html.EditorFor(model => model.TodayTotalExpensesCost, new { htmlAttributes = new { @id = "TodayTotalExpensesCost", @class = "form-control setMaxWidth", placeholder = @ClothesShop.Languages.Resources.Search } })
                    </div>
                </th>
                <th class="width20"></th>
                <th class="width20"></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<div class="container text-center">
    <ul id="Pager" class="pagination-sm"></ul>
</div>
@section scripts{
    <script>
       var msg = "@ClothesShop.Languages.Resources.AreYouSureDeleteTodayExpense";

        function ConfirmDeleteTodayExpense(id) {
            var url = '@Url.Action("Delete", "TodayExpens")';
            var data = JSON.stringify({ id: id });
            CommonManager.prototype.ConfirmDelete(url, data);
        }


         orderBy = {
            ColumnName: "CreatedOn",
            Direction: "desc",
        }
        isUpdate = "@ClothesShop.Helpers.RolesHelper.CheckRoleRight("TodayExpens", ClothesShop.Enums.RoleType.Edit)" == "True";
        isDelete = "@ClothesShop.Helpers.RolesHelper.CheckRoleRight("TodayExpens", ClothesShop.Enums.RoleType.Delete)" == "True";
        isDetails = "@ClothesShop.Helpers.RolesHelper.CheckRoleRight("TodayExpens", ClothesShop.Enums.RoleType.Details)" == "True";
        updateURL = "@Url.Action("Edit", "TodayExpens")/";
        detailsURL = "@Url.Action("Details", "TodayExpens")/";
        dataURL = '@Url.Action("GetAll", "TodayExpens")';
        columns = [{ Name: "CreatedOn_", Class: "width30" }, { Name: "TodayTotalExpensesCost", Class: "width30" }, { Name: "EDIT", Class: "width20" }, { Name: "DELETE", Class: "width20" }];
        searchColumns = [{ Name: "CreatedOn", Type: "date" }, { Name: "TodayTotalExpensesCost", Type: "input" }];
        deleteURL = "ConfirmDeleteTodayExpense";
        printURL = "";
        gridId = "TodayExpensesGrid";
        viewName = "TodayExpens";
        $(document).ready(function () {
            var tableManager = new TableManager();
            TableManager.prototype.Init();
        })

    </script>
}